[project]
name = "negotiate-ai"
version = "0.1.0"
description = ""
authors = [
    { name = "Dezhi Jacky Fu", email = "dezhi-jacky-fu@and-effect.com" },
    { name = "Adrian Baumann", email = "adrian-baumann@and-effect.com" },
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn (>=0.34.2,<0.35.0)",
    "pydantic (>=2.11.4,<3.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "beautifulsoup4 (>=4.13.4,<5.0.0)",
    "celery[redis] (>=5.5.3,<6.0.0)",
    "langchain-community (>=0.3.24,<0.4.0)",
    "langchain-openai (>=0.3.17,<0.4.0)",
    "langchain-qdrant (>=0.2.0,<0.3.0)",
    "langchain-huggingface (>=0.2.0,<0.3.0)",
    "langchain-core (>=0.3.60,<0.4.0)",
    "langgraph (>=0.4.5,<0.5.0)",
    "pypdf (>=5.6.0,<6.0.0)",
    "asgi-ratelimit (>=0.10.0,<0.11.0)",
    "curl-cffi (>=0.11.4,<0.12.0)",           # For TLS fingerprint evasion
    "tls-client (>=1.0.1,<2.0.0)",
]

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
pytest = "^8.4.1"

[tool.ruff.lint]
# Linting configuration for Ruff
# Include the following linting rules:
# - T20: print() and pprint() should not be used in production code
select = ["T20"]

# Ignore the following linting rules:
# - D100: Missing docstring in public module
# - D104: Missing docstring in public package
# - D203: 1 blank line required before class docstring
# - D401: First line should be in imperative mood
ignore = ["D100", "D104", "D203", "D401"]
# Disable fix for unused imports (`F401`)
unfixable = ["F401"]

[tool.ruff.lint.pydocstyle]
# Use the numpy convention for docstrings
convention = "numpy"

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings
docstring-code-format = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
